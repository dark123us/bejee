{"version":3,"sources":["redux/constant.js","redux/selector.js","redux/service.js","redux/action.js","redux/actiontype.js","App.js","redux/reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["DEVELOPER","SITE","URI","TOKEN","SHOW_LOGIN","PAGE","TASKS","STATE","MESSAGE","SORT","STATES","UNDEFINED","TASK_LOADING","TASK_CREATING","DONE","CHECK_LOGIN","GETTING_TASKS","CREATING_TASK","TASKS_ON_PAGE","getToken","state","getMessage","getTasks","getPagination","getParamsRequestLoadTasks","sortField","getFieldSort","sortDirection","direction","page","current","isCheckingLogin","field","getSortBy","getStateLoading","isShowLogin","localStorage","getItem","api","a","command","method","reqParams","formParams","res","ok","message","developer","url","URLSearchParams","options","mode","key","formData","FormData","append","body","fetch","response","json","data","status","showError","type","SHOW_MESSAGE","payload","showMessage","closeMessage","CLOSE_MESSAGE","checkToken","dispatch","token","SET_TOKEN","showLoginForm","isShow","SHOW_LOGIN_FORM","onLogout","removeItem","onLogin","username","password","CHECKING_LOGIN","setItem","selectPage","SELECT_PAGE","loadTasks","createTask","email","text","getState","TASK_CREATE_SUCCESS","editTask","task","newtext","newstatus","TASK_SAVING","id","TASK_SAVE_SUCCESS","sort_field","sort_direction","TASK_LOAD_SUCCESS","onSortBy","CHANGE_SORT_ORDER","CHANGE_SORT_FIELD","Main","lazy","Login","connectApp","connect","useEffect","className","fallback","exact","path","component","initialState","count","idmessage","getNewMessage","Object","entries","map","val","strong","main","action","newMessage","filter","msg","addMessages","tasks","total_task_count","prevTask","t","forEach","configureStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","Store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0915e65b.chunk.js","sourcesContent":["//export const DEVELOPER = 'bc31c768-e0cf-4472-8701-d31f4ef165ba';\nexport const DEVELOPER = '7676562';\nexport const SITE = 'https://uxcandy.com';\nexport const URI = '/~shapoval/test-task-backend/v2/';\n\nexport const TOKEN = \"TOKEN\";\nexport const SHOW_LOGIN = \"SHOW_LOGIN\";\nexport const PAGE = \"PAGE\";\nexport const TASKS = \"TASKS\";\nexport const STATE = \"STATE\";\nexport const MESSAGE = \"MESSAGE\";\nexport const SORT = \"SORT\";\n\nexport const STATES = {\n    UNDEFINED: \"UNDEFINED\",\n    TASK_LOADING: \"TASK_LOADING\",\n    TASK_CREATING: \"TASK_CREATING\",\n    DONE: \"DONE\",\n    CHECK_LOGIN: \"CHECK_LOGIN\",\n    GETTING_TASKS: \"GETTING_TASKS\",\n    CREATING_TASK: \"CREATING_TASK\"\n}\n\nexport const TASKS_ON_PAGE = 3;\nexport const TIMEOUT_MESSAGE = 15;\n","import { TOKEN, PAGE, TASKS,  MESSAGE, SORT, STATE, STATES, SHOW_LOGIN } from './constant.js';\n\nexport const getToken = state => { return state[TOKEN] };\nexport const getMessage = state => {return state[MESSAGE] };\nexport const getTasks = state => {return state[TASKS] };\nexport const getPagination = state => {return state[PAGE] };\nexport const getParamsRequestLoadTasks = state => ({\n    sortField: getFieldSort(state),\n    sortDirection: state[SORT].direction,\n    page: state[PAGE].current,\n});\n\nexport const isCheckingLogin = state => state[STATE] === STATES.CHECK_LOGIN;\nexport const getFieldSort = state => state[SORT].field;\nexport const getSortBy = state => ({\n    field: state[SORT].field, \n    direction: state[SORT].direction\n});\nexport const getStateLoading = state => \n    state[STATE] === STATES.TASK_LOADING || state[STATE] === STATES.TASK_CREATING;\nexport const isShowLogin = state => state[SHOW_LOGIN]\n","import {\n  DEVELOPER, SITE, URI, TOKEN,\n} from \"./constant.js\";\n\nexport const getToken = () => { return localStorage.getItem(TOKEN) };\nexport const setToken = (token) => { localStorage.setItem(TOKEN, token); };\nexport const clearToken = () => { localStorage.removeItem(TOKEN); };\n\nexport const api = async ({command, method, reqParams, formParams}) => {\n    command = command || \"\";\n    method = method || \"GET\";\n    reqParams = reqParams || {};\n    formParams = formParams || {};\n    const res = {\n        ok: false,\n        message: 'Что-то пошло не так'\n    }\n    reqParams.developer = DEVELOPER;\n    try {\n        const url = SITE + URI + command + \"?\"+ new URLSearchParams(reqParams);\n        const options = {\n            mode: 'cors', \n            method: method, \n        };\n        if (method === 'POST') {\n            const formData = new FormData();\n            for (let key in formParams){\n                formData.append(key, formParams[key]);\n            }\n            options.body = formData;\n        }\n        const response = await fetch(url, options);\n        if (response.ok){\n            const data = await response.json();\n            if (data.status === 'ok'){\n                res.ok = true;\n                res.message = data.message;\n            } else {\n                res.ok = false;\n                res.message = data.message\n            }\n        }\n    } catch (e){\n        res.ok = false;\n        res.message ='Что-то пошло не так';\n    }\n    return res;\n}\n\n","import { \n    CHECKING_LOGIN, SET_TOKEN, SHOW_LOGIN_FORM,\n    SELECT_PAGE, SHOW_MESSAGE, CLOSE_MESSAGE,\n    TASK_LOADING, TASK_LOAD_SUCCESS, \n    TASK_SAVING, TASK_SAVE_SUCCESS,\n    TASK_CREATING, TASK_CREATE_SUCCESS,\n    CHANGE_SORT_ORDER, CHANGE_SORT_FIELD,\n} from \"./actiontype.js\";\n\nimport { getToken, setToken, clearToken, api } from './service.js';\nimport { getParamsRequestLoadTasks, getFieldSort } from './selector.js';\n\nexport const showError = message => ({type: SHOW_MESSAGE, payload: {message, type:'error'}});\nexport const showMessage = message => ({type: SHOW_MESSAGE, payload: {message, type:'success'}});\nexport const closeMessage = message => ({type: CLOSE_MESSAGE,  payload: {message}});\n\nexport const checkToken = () => {\n    return dispatch => {\n        const token = getToken();\n        dispatch({type: SET_TOKEN, payload: {token}});\n    }\n}\nexport const showLoginForm = isShow => ({type: SHOW_LOGIN_FORM, payload: isShow});\nexport const onLogout = () => {\n    return dispatch => {\n        clearToken();\n        dispatch(checkToken());\n        dispatch(showMessage(\"Logout\"));\n    }\n}\nexport const onLogin = (username, password) => {\n    return async dispatch => {\n        dispatch({type: CHECKING_LOGIN});\n        const res = await api({\n            command: \"login\",\n            method: \"POST\",\n            formParams: {username, password}\n        });\n        if (res.ok) {\n            setToken(res.message.token);\n            dispatch(showMessage(\"Access granted\"));\n            dispatch(checkToken());\n        } else {\n            dispatch(showError(res.message));\n        }\n    }\n}\nexport const selectPage = page => {\n    return dispatch => {\n        dispatch({type: SELECT_PAGE, payload: {page} });\n        dispatch(loadTasks());\n    }\n}\nexport const createTask = ({username, email, text}) => {\n    return async (dispatch, getState) => {\n        dispatch({type: TASK_CREATING});\n        const res = await api({\n            command: \"create\", \n            method: \"POST\", \n            formParams: {username, email, text},\n        });\n        if (res.ok){\n            dispatch({type: TASK_CREATE_SUCCESS, payload: res.message});\n            dispatch(showMessage(\"Task created\"));\n            dispatch(loadTasks());\n        } else {\n            dispatch(showError(res.message));\n        }\n    }\n}\nexport const editTask = ({task, newtext, newstatus}) => {\n    return async (dispatch, getState) => {\n        dispatch({type: TASK_SAVING});\n        const token = getToken();\n        if (!token) {\n            dispatch(showError(\"Токен истёк\"));\n            dispatch(checkToken());\n            dispatch(showLoginForm(true));\n            return;\n        }\n        const res = await api({\n            command: \"edit/\" + task.id, \n            method: \"POST\", \n            formParams: {text: newtext, status:newstatus, token},\n        });\n        \n        if (res.ok){\n            dispatch( {type: TASK_SAVE_SUCCESS, payload: {task, newtext, newstatus}} );\n            dispatch(showMessage(\"Task changed\"));\n        } else {\n            dispatch(showError(res.message));\n        }\n    }\n}\nexport const loadTasks = () => {\n    return async (dispatch, getState) => {\n        const { sortField, sortDirection, page } = getParamsRequestLoadTasks( getState() );\n        dispatch({type: TASK_LOADING});\n        const res = await api({\n            reqParams: {\n                sort_field: sortField,\n                sort_direction: sortDirection?\"asc\":\"desc\",\n                page: page\n            }\n        });\n        if (res.ok){\n            dispatch({type: TASK_LOAD_SUCCESS, payload: res.message});\n        } else {\n            dispatch(showError(res.message));\n        }\n    }\n}\nexport const onSortBy = (field) => {\n    return (dispatch, getState) => {\n        if ( field === getFieldSort(getState()) ){\n            dispatch({type: CHANGE_SORT_ORDER})\n        } else {\n            dispatch({ type: CHANGE_SORT_FIELD, payload:{field} });\n            \n        }\n        dispatch(loadTasks());\n    }\n}\n\n","export const CREATE = \"CREATE\";\nexport const EDIT = \"CREATE\";\nexport const CHECKING_LOGIN = \"CHECKING_LOGIN\";\nexport const CHECK_TOKEN = \"CHECK_TOKEN\"\nexport const SET_TOKEN = \"SET_TOKEN\";\nexport const SHOW_LOGIN_FORM = \"SHOW_LOGIN_FORM\";\nexport const CHANGE_STATE = \"CHANGE_STATE\";\nexport const SELECT_PAGE = \"SELECT_PAGE\";\nexport const TASK_LOADING = \"TASK_LOADING\";\nexport const TASK_LOAD_SUCCESS = \"TASK_LOAD_SUCCESS\";\nexport const TASK_LOAD_FAIL = \"TASK_LOAD_FAIL\";\nexport const TASK_CREATING = \"TASK_CREATING\";\nexport const TASK_CREATE_SUCCESS = \"TASK_CREATE_SUCCESS\";\nexport const TASK_SAVING = \"TASK_SAVING\";\nexport const TASK_SAVE_SUCCESS = \"TASK_SAVE_SUCCESS\";\nexport const SHOW_ERROR = \"SHOW_ERROR\";\nexport const SHOW_MESSAGE = \"SHOW_MESSAGE\";\nexport const CLOSE_MESSAGE = \"CLOSE_MESSAGE\";\nexport const CHANGE_SORT_ORDER = \"CHANGE_SORT_ORDER\";\nexport const CHANGE_SORT_FIELD = \"CHANGE_SORT_FIELD\";\n\n\n","import React, {lazy, Suspense, useEffect} from 'react';\n//import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport { checkToken, loadTasks } from './redux/action.js';\nimport './App.css';\nconst Main = lazy( () => import('./containers/main'));\nconst Login = lazy( () => import('./containers/login'));\n\nconst App = ({ checkToken, loadTasks }) => {\n    useEffect(()=>{\n        checkToken();\n        loadTasks();\n    },[ checkToken, loadTasks ])\n    return (\n        <div className=\"App\">\n            <Router>\n                <Suspense fallback={<div>Loading...</div>}>\n                    <Switch>\n                        <Route exact  path='/' component={Main} />\n                        <Route path='/login' component={Login} />\n                        <Route path='/bejee/' component={Main} />\n                        <Route path='/bejee/login' component={Login} />\n                    </Switch>\n                </Suspense>\n            </Router>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n})\n\nconst mapDispatchToProps = dispatch => ({\n    checkToken: () => dispatch(checkToken()),\n    loadTasks: () => dispatch(loadTasks()),\n})\n\nconst connectApp = connect(mapStateToProps, mapDispatchToProps)(App)\n\n\n\nexport default connectApp;\n","import {\n    TOKEN, PAGE, MESSAGE,\n    TASKS, STATE, STATES,\n    TASKS_ON_PAGE, SORT, \n    SHOW_LOGIN,\n} from './constant.js';\n\nimport { \n  TASK_CREATING, TASK_LOADING,\n  TASK_LOAD_SUCCESS, TASK_CREATE_SUCCESS,\n  TASK_SAVE_SUCCESS,\n  SELECT_PAGE, \n  SHOW_MESSAGE, CLOSE_MESSAGE,\n  CHECKING_LOGIN, SET_TOKEN, SHOW_LOGIN_FORM,\n  CHANGE_SORT_ORDER, CHANGE_SORT_FIELD,\n} from './actiontype.js';\n\nconst initialState = {\n    [SORT]: {direction: true, field: 'id' },\n    [PAGE]: {current: 1, count:1},\n    [TASKS]: [  ],\n    [STATE]: STATES.UNDEFINED,\n    [TOKEN]: null,\n    [MESSAGE]: [],\n    [SHOW_LOGIN]: false,\n}\n\nlet idmessage = 0;\n\nconst getNewMessage = payload => {\n    const { message, type } = payload;\n    let addMessages = [];\n    if (typeof(message) === 'object') {\n        addMessages = Object.entries(message).map( ([key,val]) => {\n            return { \n                id: idmessage++,\n                strong: key,\n                message: val,\n                type\n            }\n        });\n    } else {\n        addMessages = [{\n            id: idmessage++,\n            message,\n            type\n        }];\n    }\n    return addMessages;\n}\n\nconst main = (state = initialState, action) => {\n    switch (action.type){\n        case SHOW_LOGIN_FORM:\n            return {...state,\n                [SHOW_LOGIN]: action.payload,\n            };\n        case CLOSE_MESSAGE:\n            const { message } = action.payload;\n            const newMessage = state[MESSAGE].filter(msg => msg.id !== message.id);\n            return { ...state,\n                [MESSAGE]: newMessage,\n            };\n        case SHOW_MESSAGE:\n            const addMessages = getNewMessage(action.payload);\n            return {...state,\n                [MESSAGE]: [ ...addMessages, ...state[MESSAGE] ],\n                [STATE]: STATES.DONE,\n            };\n        case TASK_CREATING:\n            return { ...state,\n                [STATE]: STATES.TASK_CREATING,\n            };\n        case TASK_LOADING:\n            return { ...state,\n                [STATE]: STATES.TASK_LOADING,\n            };\n        case TASK_LOAD_SUCCESS:\n            const {tasks, total_task_count} = action.payload;\n            const count = ((+total_task_count -1) / TASKS_ON_PAGE | 0 ) + 1;\n            return { ...state,\n                [TASKS]: tasks,\n                [STATE]: STATES.DONE,\n                [PAGE]: {\n                    current: (state[PAGE].current <= count)? state[PAGE].current: count,\n                    count\n                },\n            };\n        case TASK_CREATE_SUCCESS:\n            return { ...state,\n                [STATE]: STATES.DONE,\n            };\n        case TASK_SAVE_SUCCESS:\n            const { task, newtext, newstatus } = action.payload;\n            const prevTask = [...state[TASKS]];\n            prevTask.filter( t => t.id === task.id).forEach(t => {\n                t.text = newtext;\n                t.status = newstatus;\n            });\n            return { ...state,\n                [TASKS]: prevTask\n            };\n        case SELECT_PAGE:\n            const {page} = action.payload;\n            return { ...state,\n                [PAGE]: {...state[PAGE], current:page},\n            };\n        case CHECKING_LOGIN:\n            return { ...state,\n                [STATE]: STATES.CHECKING_LOGIN,\n            };\n        case SET_TOKEN:\n            const { token } = action.payload;\n            return { ...state, \n                [TOKEN]: token\n            };\n        case CHANGE_SORT_ORDER:\n            return { ...state, \n                [SORT]: { ...state[SORT], direction: !state[SORT].direction }\n            };\n        case CHANGE_SORT_FIELD:\n            const { field } = action.payload;\n            return { ...state,\n                [SORT]: { direction: true, field }\n            };\n        default:{\n            return state;\n        }\n    }\n};\n\nexport default main;\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './reducer'\n\nconst configureStore = (initialState) => {\n\tconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\treturn createStore(reducer, initialState, composeEnhancers( applyMiddleware(thunk) ))\n}\nexport default configureStore;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport Store from './redux/store';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = Store();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}