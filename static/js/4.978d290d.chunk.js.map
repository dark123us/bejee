{"version":3,"sources":["components/tasker.js","components/pagination.js","components/message.js","components/auth.js","components/loading.js","containers/main.js"],"names":["TaskEdit","onSave","onCancel","data","useState","newtext","setText","status","checked","setCheck","useEffect","text","handleSubmit","e","preventDefault","className","onSubmit","username","email","type","rows","onChange","target","value","id","forhtml","onClick","TaskAdd","setUsername","setEmail","TaskHeader","onSortBy","sortBy","cl","direction","f","field","Task","allowEdit","onSelect","0","1","10","11","rowClass","Tasks","onAdd","onEdit","editmode","setEditmode","selectedTask","selectTask","clearSelect","tasks","map","task","handleSelectTask","taskEdit","newstatus","handleEdit","Pagination","count","current","pages","i","push","href","aria-label","Message","onClose","val","setVal","width","setWidth","timer","setInterval","clearInterval","warning","success","error","role","strong","message","data-bs-dismiss","style","height","aria-valuenow","Messages","slice","msg","Auth","token","LoginForm","onLogin","isCheckingLogin","name","setName","passwd","setPasswd","handleLogin","handleEsc","event","keyCode","window","addEventListener","removeEventListener","btns","disabled","aria-hidden","onReset","htmlFor","Loading","state","show","setShow","connectMain","connect","getToken","getMessage","getTasks","getPagination","getSortBy","isLoading","getStateLoading","isShowLogin","dispatch","createTask","editTask","selectPage","numberPage","showError","onLogout","onCloseMessage","closeMessage","onShowMessage","showMessage","redirectLogin","setRedirect","to","handleSelectPage"],"mappings":"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","file":"static/js/4.978d290d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const TaskEdit = ({onSave, onCancel, data}) => {\n    const [newtext, setText] = useState(\"\");\n    const [checked, setCheck] = useState(data.status >= 10);\n    useEffect(()=> {\n        setText(data.text);\n        setCheck(data.status >= 10);\n    }, [data]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSave({newtext, checked});\n    }\n\n    return (\n        <div className=\"card mt-2 mb-2\">\n            <form className=\"row\" onSubmit={e => handleSubmit(e)}>\n                <div className=\"col-sm-3 overflow-auto\">\n                    {data.username}\n                </div>\n                <div className=\"col-sm-3 overflow-auto\">\n                    {data.email}\n                </div>\n                <div className=\"col-sm-4\">\n                    <textarea type=\"text\" className=\"form-control\" rows=\"1\"\n                        onChange={ e => setText(e.target.value) } value={newtext} />\n                </div>\n                <div className=\"col-sm-2 text-start\">\n                    <div className=\"form-check\">\n                        <input type=\"checkbox\" className=\"form-check-input\" id=\"msgStatus\"\n                            onChange={ () => setCheck(!checked) } checked={checked} />\n                        <label className=\"form-check-label\" forhtml=\"msgStatus\">isDone  </label>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-10\"/>\n                        <div className=\"col-sm-2\">\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={ e => handleSubmit(e) } >Изменить </button> \n                            <button className=\"btn btn-secondary\" onClick={ () => onCancel() } >Отмена</button> \n                        </div>\n                    </div>\n                </form>\n        </div>\n    )\n}\n\nexport const TaskAdd = ({onSave}) => {\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [text, setText] = useState(\"\");\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSave({username, email, text});\n        setUsername(\"\"); setEmail(\"\"); setText(\"\");\n    }\n    \n    return (\n        <div className=\"card mt-2 mb-2\">\n            <form className=\"row \" onSubmit={e => handleSubmit(e)}>\n                <div className=\"col-sm-3\">\n                    <input type=\"text\" className=\"form-control\" onChange={ e => setUsername(e.target.value) } value={username} />\n                </div>\n                <div className=\"col-sm-3\">\n                    <input type=\"text\" className=\"form-control\" onChange={ e => setEmail(e.target.value) } value={email} />\n                </div>\n                <div className=\"col-sm-4\">\n                    <textarea rows=\"1\" type=\"text\" className=\"form-control\" onChange={ e => setText(e.target.value) } value={text} />\n                </div>\n                <div className=\"col-sm-2\">\n                    <button type=\"submit\" className=\"btn btn-success\" onClick={ e => handleSubmit(e) } > Создать </button> \n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport const TaskHeader = ({onSortBy, sortBy}) => {\n    const cl = sortBy.direction?<i className=\"bi-caret-down\" />:<i className=\"bi-caret-up\" />;\n    const f = sortBy.field;\n    return (\n        <div className=\"row fs-3\">\n            <div className=\"col-sm-3 cursor-pointer border text-truncate \" onClick={() => onSortBy('username')}>\n                {f==='username'?cl:\"\"} ИМЯ ПОЛЬЗОВАТЕЛЯ\n            </div>\n            <div className=\"col-sm-3 cursor-pointer border text-truncate\" onClick={() => onSortBy('email')}>\n                {f==='email'?cl:\"\"} EMAIL\n            </div>\n            <div className=\"col-sm-4 border text-truncate\">ТЕКСТ ЗАДАЧИ</div>\n            <div className=\"col-sm-2 cursor-pointer border text-truncate\" onClick={() => onSortBy('status')}>\n                {f==='status'?cl:\"\"} СТАТУС\n            </div>\n        </div>\n    )\n}\n\nexport const Task = ({data, allowEdit, onSelect }) => {\n    const handleSelect = () => {\n        if (allowEdit) onSelect(data);\n    }\n    const text = {\n        0: \"не выполнена\",\n        1: \"не выполнена, отредактирована админом\",\n        10: \"выполнена\",\n        11: \"отредактирована админом и выполнена\",\n    }\n    const status = (<>{text[data.status]}  </>);\n    let  rowClass = \"row minheight\";\n    rowClass += allowEdit?\" cursor-pointer\":\"\";\n    rowClass += \" border\";\n    if (data.status === 0) rowClass += \" border-primary\";\n    if (data.status === 1) rowClass += \" border-secondary\";\n    if (data.status === 10) rowClass += \" border-info\";\n    if (data.status === 11) rowClass += \" border-success\";\n    return (\n        <div className={rowClass} onClick={() => handleSelect()}>\n            <div className=\"col-sm-3 text-truncate\"> <span className=\"align-middle\"> {data.username} </span></div>\n            <div className=\"col-sm-3 text-truncate\">{data.email}</div>\n            <div className=\"col-sm-4 overflow-auto\">{data.text}</div>\n            <div className=\"col-sm-2 overflow-auto\">{status} </div>\n        </div>\n    )\n}\n\nexport const Tasks = ({sortBy, data, allowEdit, onSortBy, onAdd, onEdit}) => {\n    const [editmode, setEditmode] = useState(false);\n    const [selectedTask, selectTask] = useState({});\n    const clearSelect  = () => {\n        selectTask({});\n        setEditmode(false);\n    }\n    useEffect( () => {\n        clearSelect();\n    },[data]);\n    const handleSelectTask = task => {\n        selectTask(task);\n        setEditmode(true);\n    }\n    const handleEdit = ({newtext, checked}) => {\n        const flagTextChange = (selectedTask.status === 1 || selectedTask.status === 11 || newtext !== selectedTask.text) & 1;\n        const flagStatus = (checked)?10:0;\n        const newstatus = flagTextChange + flagStatus;\n        if (newstatus > 0) onEdit({task: selectedTask, newtext, newstatus});\n        clearSelect();\n    }\n    const tasks = data.map( task => (\n        <Task key={task.id} \n            data={task} \n            allowEdit={allowEdit} \n            onSelect={task => handleSelectTask(task)}/>\n    ));\n    const taskEdit = (editmode)?\n        (<TaskEdit \n            data={selectedTask} \n            onSave={ ({newtext, checked}) => handleEdit({newtext, checked}) } \n            onCancel={clearSelect} \n            />):\n        (<TaskAdd onSave={({username, email, text}) => onAdd({username, email, text})} />)\n    return (\n        <div className=\"container\">\n        <TaskHeader sortBy={sortBy} onSortBy={onSortBy}/>\n            {tasks}\n            {taskEdit}\n        </div>\n    )\n}\n","import React from 'react';\n\nconst Pagination = ({count, current, onSelect}) => {\n    if (count < 2) return (<></>)\n    \n    const pages = [];\n    for (let i=1; i<=count; i++){\n        pages.push(\n            <li key={i} className={(i===current)?\"page-item active\":\"page-item\"}\n                    onClick={() => onSelect(i)} >\n                <a className=\"page-link\" href=\"#\">{i}</a>\n            </li>\n        );\n    }\n    \n    return (\n        <nav aria-label=\"...\">\n            <ul className=\"pagination\">\n                <li className={(current===1)? \"page-item disabled\": \"page-item\"}\n                        onClick={() => onSelect(current-1)} >\n                    <a className=\"page-link\" href=\"#\" >Previous</a>\n                </li>\n                { pages }\n                <li className={(current===count)?\"page-item disabled\":\"page-item\"}\n                        onClick={() => onSelect(current+1)} >\n                    <a className=\"page-link\" href=\"#\">Next</a>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Pagination;\n","import React, { useEffect, useState } from 'react';\nconst TIMEOUT_MESSAGE = 10;\n\nexport const Message = ({data, onClose}) => {\n    const types = {\n        warning: \"alert alert-warning alert-dismissible fade show\",\n        success: \"alert alert-success alert-dismissible fade show\",\n        error: \"alert alert-danger alert-dismissible fade show\",\n    }\n    const progressTypes = {\n        warning: \"progress-bar bg-warning\",\n        success: \"progress-bar bg-success\",\n        error: \"progress-bar bg-danger\",\n    }\n    \n    const [val, setVal] = useState(TIMEOUT_MESSAGE);\n    const [width, setWidth] = useState(100);\n    useEffect( () => {\n        const timer = setInterval(() => {\n            if (val <= 0){\n                onClose(data);\n            } else {\n                setVal(val-1);\n                setWidth((100 * val / TIMEOUT_MESSAGE) | 0);\n            }\n        }, 1000);\n        return () => clearInterval(timer)\n    }, [data, onClose, val ]);\n\n    return (\n        <div className={types[data.type]} role=\"alert\">\n            <div>\n                <strong>{data.strong}</strong> {data.message} \n                <button type=\"button\" className=\"btn-close\" \n                    data-bs-dismiss=\"alert\" aria-label=\"Close\" onClick={() => onClose(data)}>\n                </button>\n            </div>\n            <div className=\"progress\" style={{height: \"1px\"}}>\n                <div className={progressTypes[data.type]} role=\"progressbar\"\n                    style={{width: \"\"+width+\"%\"}} aria-valuenow={width} />\n            </div>\n        </div>\n  )\n\n}\nconst Messages = ({data, onClose}) => {\n    const rows = data.slice(0, 10).map( msg => (\n        <div className=\"row\" key={msg.id} >\n            <div className=\"col-sm-8\" />\n            <div className=\"com-sm-4\">\n                <Message key={msg.id}\n                    onClose={ val => onClose(val)} \n                    data={ msg } />\n            </div>\n        </div>\n    )); \n    \n    return(\n        <div className=\"fullscreen\">\n            {rows}\n        </div>\n    )\n}\n\nexport default Messages;\n\n","import React, { useState, useEffect } from \"react\";\n\nexport const Auth = ({token, onClick }) => {\n    if (token){\n        return (<button onClick={() => onClick()} className=\"btn btn-secondary\">Выход</button>)\n    } else {\n        return (<button onClick={()=> onClick()} className=\"btn btn-secondary\">Вход</button>)\n    }\n}\n\nexport const LoginForm = ({onLogin, onCancel, isCheckingLogin }) => {\n    const [name, setName] = useState(\"\");\n    const [passwd, setPasswd] = useState(\"\");\n\n    const handleLogin = e => {\n        e.preventDefault();\n        onLogin(name, passwd);\n    };\n  \n    useEffect(() => {\n        const handleEsc = (event) => {\n            if (event.keyCode === 27) {\n                onCancel();\n            }\n        };\n        window.addEventListener('keydown', handleEsc);\n        return () => {\n            window.removeEventListener('keydown', handleEsc);\n        };\n    }, [onCancel]);\n  \n    const btns = (!isCheckingLogin)?(\n        <>\n            <button type=\"button\" className=\"btn btn-secondary me-4\" \n                    onClick={() => onCancel()} >\n                Отмена\n            </button>\n            <button type=\"submit\" className=\"btn btn-success ms-4\"\n                    onClick={e => handleLogin(e)}>\n                Вход\n            </button>\n        </>\n    ) :(\n        <button type=\"button\" className=\"btn btn-primary\" disabled>\n            <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\"\n                aria-hidden=\"true\" />\n            Проверка ...\n        </button>\n    );\n\n    return (\n        <form onSubmit={() => handleLogin()}\n                onReset={()=> onCancel()}>\n            <div className=\"card pb-4 pt-4\">\n                <div className=\"card-body\">\n                    <div className=\"mb-4 row\">\n                        <label htmlFor=\"staticEmail\" className=\"col-sm-4 col-form-label\">Логин</label>\n                        <div className=\"col-sm-8\">\n                            <input type=\"text\" className=\"form-control\" \n                                    id=\"inputUsername\" value={name} \n                                    onChange={e => setName(e.target.value)} />\n                        </div>\n                    </div>\n                    <div className=\"mb-4 row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">Пароль</label>\n                        <div className=\"col-sm-8\">\n                            <input type=\"password\" className=\"form-control\" \n                                    id=\"inputPassword\" onChange={e => setPasswd(e.target.value)}\n                                    value={passwd}  />\n                        </div>\n                    </div>\n                    <div>\n                        {btns}\n                    </div> \n                </div>\n            </div>\n        </form>\n    )\n}\n\n","import React, {useEffect, useState} from 'react';\n\nconst Loading = ({state}) => {\n    const [show, setShow] = useState(false);\n    useEffect(()=> {\n        setShow(state);\n    },[state, setShow])\n    return (\n        <div className={show?\"showmodal\":\"hidemodal\"}>\n            <div className=\"center-position\">\n                <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span> \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading;\n","import React, { useState, useEffect }  from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { Tasks, Pagination, Auth, Messages, Loading } from '../components/index.js';\nimport { getToken, getMessage, getTasks, getPagination, getSortBy,\n    getStateLoading, isShowLogin,\n} from '../redux/selector.js';\nimport { createTask, editTask, selectPage, showError, \n    onLogout, onSortBy, closeMessage, showMessage,\n} from '../redux/action.js';\n\nconst Main = ({ token, message, tasks, pages, isLoading,\n    createTask, editTask, selectPage, showError, onLogout,\n    sortBy, onSortBy, onCloseMessage, onShowMessage, isShowLogin,\n}) => {\n    const [redirectLogin, setRedirect] = useState(false);\n    const handleLogin = () => {\n        if (token) {\n            onLogout();\n        } else {\n            setRedirect(true);\n        }\n    }\n    useEffect(() => {\n        if (isShowLogin) setRedirect(true);\n    }, [isShowLogin, setRedirect]);\n    const handleSelectPage = (numberPage) => {\n        if (numberPage > 0 && numberPage !== pages.current && numberPage <= pages.count){\n            selectPage(numberPage);\n        }\n    }\n    if (redirectLogin) return (<> <Redirect to=\"/login\" /> </>);\n    \n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-sm-10\" />\n                    <div className=\"col-sm-2 text-end\">\n                        <Auth onClick ={() => handleLogin()} token={token} />\n                    </div>\n                </div>\n            <div className=\"container border rounded\">\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <Tasks data={tasks} \n                            allowEdit={!!token}\n                            onAdd={ ({username, email, text }) => createTask({username, email, text})} \n                            onEdit={ ({task, newtext, newstatus}) => editTask({task, newtext, newstatus})}\n                            sortBy={sortBy}\n                            onSortBy={(field) => onSortBy(field)}\t\t/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <Pagination \n                            onSelect={numberPage => handleSelectPage(numberPage)}\n                            current={pages.current} \n                            count={pages.count}  />\n                    </div>\n                </div>  \n                <Loading state={isLoading} />\n            </div>\n            <Messages data={message} onClose={ msg => onCloseMessage(msg)}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    token: getToken(state), \n    message: getMessage(state),\n    tasks: getTasks(state),\n    pages: getPagination(state),\n    sortBy: getSortBy(state),\n    isLoading: getStateLoading(state),\n    isShowLogin: isShowLogin(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    createTask: ({username, email, text}) => dispatch(createTask({username, email, text})),\n    editTask: ({task, newtext, newstatus}) => dispatch(editTask({task, newtext, newstatus})),\n    selectPage: numberPage => dispatch(selectPage(numberPage)),\n    showError: msg => dispatch(showError(msg)),\n    onLogout: () => dispatch(onLogout()),\n    onSortBy: field => dispatch(onSortBy(field)),\n    onCloseMessage: message => dispatch(closeMessage(message)),\n    onShowMessage: message => dispatch(showMessage(message)),\n});\n\nconst connectMain = connect(mapStateToProps, mapDispatchToProps)(Main);\n\nexport default connectMain;\n"],"sourceRoot":""}